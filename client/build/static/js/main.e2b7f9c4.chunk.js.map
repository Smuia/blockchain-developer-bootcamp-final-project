{"version":3,"sources":["pages/utils/get-image-for-fund-raise.js","app-context.js","pages/home/Home.jsx","pages/fund-raise/FundRaise.jsx","getWeb3.js","pages/components/NavBar.js","pages/components/Login.js","pages/components/MyAccount.js","pages/components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["getImageForFundRaise","postIndex","fundRaiseImages","normalizedFundRaiseImages","React","createContext","HomeWrapper","useState","title","goal","description","fundRaiseForm","setFundRaiseForm","loading","setLoading","modalVisible","setModalVisible","fundRaises","setFundRaises","useContext","AppContext","fundRaise","account","web3","history","useHistory","getFundRaises","useCallback","a","methods","getHomeData","call","navigateToFundRaise","id","push","setupCreatePostListener","events","EventCreated","error","contractEvent","returnValues","event","preventDefault","createEvent","utils","toWei","send","from","useEffect","closeModal","onChange","target","previousState","name","value","onSubmit","openModal","onClickCard","FundRaise","current","userIsFundRaiseCreator","withdraw","active","Container","fluid","className","Row","Col","Button","variant","onClick","size","lg","style","backgroundImage","DonateModal","onClose","show","Modal","onHide","Header","Title","Body","Form","Group","controlId","Label","Control","type","FundRaiseWrapper","donateForm","setDonateForm","uiData","setUiData","useParams","dependencies","getFundRaiseData","setupDonateListener","Donated","amount","updatedTotal","parseInt","setupWithdrawListener","Withdraw","status","donate","Alert","key","fromWei","creator","getWeb3","Promise","resolve","reject","window","ethereum","Web3","console","log","provider","providers","HttpProvider","NavBarComponent","Navbar","collapseOnSelect","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","isMobileDevice","connect","onConnected","alert","request","method","accounts","length","MetaMaskAuth","onAddressChanged","userAddress","setUserAddress","checkIfWalletIsConnected","location","reload","Connect","MyAccountComponent","walletAccount","setWalletAccount","setIsConnected","ethBalance","setEthBalance","currentChain","setCurrentChain","currentProvider","setProviderName","on","chaindId","handleConnectWallet","getProviderName","ProviderName","getCurrentChainId","chainId","handleGetBalance","params","balance","wei","gwei","Math","pow","eth","color","Table","striped","bordered","hover","toFixed","FooterComponent","Year","Date","getFullYear","marginTop","getLibrary","ethers","Web3Provider","App","loaded","setDependencies","networkId","networkData","net","getId","undefined","networks","Contract","abi","address","getAccounts","Provider","path","exact","NoMatch","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2b7f9c4.chunk.js","sourcesContent":["/**\n * @description Helper function to get the image for a post\n * @param {Number} postIndex\n * @returns {String}\n */\nexport default function getImageForFundRaise(postIndex) {\n  const fundRaiseImages = [\n    \"https://www.efficy.com/wp-content/uploads/2020/12/Crowdfunding.png\",\n    \"https://decentralized-mvp.s3.amazonaws.com/fundraiser/fundraise-2-min.jpg\",\n    \"https://decentralized-mvp.s3.amazonaws.com/fundraiser/fundraise-3-min.jpg\"\n  ];\n  const normalizedFundRaiseImages = postIndex + 1;\n\n  if (normalizedFundRaiseImages % 3 === 0) {\n    return fundRaiseImages[2];\n  } else if (normalizedFundRaiseImages % 2 === 0) {\n    return fundRaiseImages[1];\n  } else {\n    return fundRaiseImages[0];\n  }\n}","import React from 'react';\nexport default React.createContext();\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Container, Row, Col, Button, Modal, Form } from 'react-bootstrap';\nimport getImageForFundRaise from '../utils/get-image-for-fund-raise';\nimport AppContext from '../../app-context';\nimport { Folder2Open, PencilSquare } from 'react-bootstrap-icons';\n\nimport './Home.css';\n\nexport default function HomeWrapper() {\n\n  const [fundRaiseForm, setFundRaiseForm] = useState({ title: '', goal: '', description: '' });\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [fundRaises, setFundRaises] = useState([]);\n  \n  const { fundRaise, account, web3 } = useContext(AppContext);\n\n  const history = useHistory();\n\n  /**\n   * @description Function used to get the events\n   */\n  let getFundRaises = React.useCallback(async function getFundRaises() {\n    return await fundRaise.methods.getHomeData().call()\n  },[fundRaise.methods]\n  );\n\n  let navigateToFundRaise = React.useCallback(\n    /**\n   * @description Wrapper for keeping code DRY\n   */\n  function navigateToFundRaise(id) {\n    history.push(`/fund-raise/${id}`)\n  },[history]\n\n  )\n\n\n  /**\n   * @description Setup the create event listener\n   */\n  let setupCreatePostListener = React.useCallback(function setupCreatePostListener() {\n    fundRaise.events.EventCreated({}, (error, contractEvent) => {\n      const { id } = contractEvent.returnValues\n      navigateToFundRaise(id)\n    })\n  },[navigateToFundRaise,fundRaise.events]);\n\n  \n  useEffect(() => {\n    (async function() {\n      setupCreatePostListener()\n      setFundRaises(await getFundRaises())\n      setLoading(true)\n    })()\n  }, [setupCreatePostListener,getFundRaises])\n\n  \n  \n  \n  \n  /**\n   * @description On change handler for post modal\n   * @param {Object} event\n   */\n  function onChange(event) {\n    const { target } = event\n    setFundRaiseForm(previousState => ({ ...previousState, [target.name]: target.value }))\n  }\n\n  /**\n   * @description Submit handler for new post\n   * @param {Object} event \n   */\n  async function onSubmit(event) {\n    event.preventDefault()\n    const { title, goal, description } = fundRaiseForm\n    await fundRaise.methods.createEvent(title, description, web3.utils.toWei(goal, 'ether')).send({ from: account })\n  }\n\n  \n\n  return (\n    loading ?\n    \n      <HomeWrapper\n        closeModal={() => setModalVisible(false)}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        modalVisible={modalVisible}\n        openModal={() => setModalVisible(true)}\n        fundRaises={fundRaises}\n        onClickCard={id => navigateToFundRaise(id)}\n      /> :\n      <div>loading...</div>\n  )\n}\n\n\nexport function Home({\n  closeModal,\n  onChange,\n  onSubmit,\n  modalVisible,\n  openModal,\n  fundRaises,\n  onClickCard\n}) {\n  return (\n    \n    <Container fluid=\"lg\" className=\"home\">      \n      <CreateModal\n        onChange={onChange}\n        onClose={closeModal}\n        onSubmit={onSubmit}\n        show={modalVisible}\n      />\n      \n      <Row>\n        <Col className=\"home-top-section\">\n          \n          <div className=\"home-top-section-overlay\"></div>\n          <div className=\"home-button-header-container\">\n            <h2>WELCOME TO FUND-NET APP</h2>\n            <p>A decentralized fund raising app running on the blockchain.</p>\n            <Button className=\"createProjectBtn\" onClick={openModal} variant=\"primary\" size=\"lg\"><PencilSquare/> Create a Campaign</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '20px' }}>\n        <Col>\n          <h2 className=\"pageTitle\">Explore Our Campaigns</h2>\n        </Col>\n      </Row>\n      <Row id=\"ExploreCampaigns\"  style= {{marginBottom:\"10px\"}}>\n        <small style= {{marginBottom:\"4rem\"}}><i>Our main mission and vision is to see\n          the world where people come together for the best of each other. <br/>See the campaigns listed below.</i></small>\n\n        {fundRaises.map((description) => (\n          <Col key={description.id} style={{ marginBottom: '10px' }}>\n            <FundRaise\n              fundRaiseId={description.id}\n              title={description.title}\n              onClickCard={onClickCard}\n            />\n          </Col>\n        ))}\n\n\n      </Row>\n    </Container>\n  )\n}\n\nfunction FundRaise({\n  fundRaiseId,\n  title,\n  onClickCard\n}) {\n  const fundRaiseImage = getImageForFundRaise(fundRaiseId)\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={fundRaiseImage}/>\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Button onClick={() => onClickCard(fundRaiseId)} variant=\"primary\"><Folder2Open/> Learn More</Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nfunction CreateModal({\n  onChange,\n  onClose,\n  onSubmit,\n  show\n}) {\n\n  return (\n    <Modal show={show} onHide={onClose} id=\"myModal\">\n      <Modal.Header>\n        <Container style={{textAlign:'center'}}>\n          <Row>\n            <Col><Modal.Title>Create Your Campaign</Modal.Title></Col>\n          </Row>\n          <Row>\n            <Col> <small>This campaign will be displayed on the our campaign list</small></Col>\n          </Row>\n        </Container>\n        \n       \n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSubmit}>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Campaign Title</Form.Label>\n            <Form.Control required type=\"text\" name=\"title\" onChange={onChange}/>\n          </Form.Group>\n          <Form.Group controlId=\"goal\">\n            <Form.Label>Goal (ETH)</Form.Label>\n            <Form.Control required type=\"number\" name=\"goal\" placeholder=\"1\" onChange={onChange}/>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Campaign Description</Form.Label>\n            <Form.Control required as=\"textarea\" name=\"description\"  onChange={onChange}/>\n          </Form.Group>\n          <Button variant=\"secondary\" onClick={onClose} className=\"me-1 mt-1\">Close</Button>\n          <Button variant=\"primary\" type=\"submit\" className=\"mt-1\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Container, Col, Row, Button, Modal, Form, Alert } from 'react-bootstrap'\nimport getImageForFundRaise from '../utils/get-image-for-fund-raise'\nimport AppContext from '../../app-context'\nimport { CashStack, Gift } from 'react-bootstrap-icons'\n//import NavBar from '../components/NavBar';\n\nimport './FundRaise.css'\n\nexport default function FundRaise({\n  title,\n  id,\n  description,\n  current,\n  goal,\n  closeModal,\n  onChange,\n  onSubmit,\n  modalVisible,\n  openModal,\n  userIsFundRaiseCreator,\n  withdraw,\n  active\n}) {\n  return (\n    <Container fluid=\"lg\">\n      \n      <h1 className=\"mb-3\">{title}</h1>\n      {\n        userIsFundRaiseCreator && active ?\n          <Row>\n            <Col className=\"p-2\">\n              <Button variant=\"danger\" onClick={withdraw} size=\"lg\"><CashStack/>  Withdraw Cash</Button>\n            </Col>\n          </Row> :\n          null\n      }\n      <Row>\n        <Col lg={6}>\n          <div className=\"fund-raise-image\" style={{ backgroundImage: `url(\"${getImageForFundRaise(id)}\")` }}></div>\n        </Col>\n        {\n          active ?\n          <Col>\n            <div className=\"fund-raise-side-panel mt-2 mt-lg-0\">\n              <div className=\"fund-raise-goal\">{current} ETH raised of {goal} ETH</div>\n              <div><p>We are glad that you are a great giver. If you wish to walk\n                with us, click the button below and LET'S CHANGE THE WORLD!</p></div>\n              <div className=\"fund-raise-donate-button-container\">\n                <Button variant=\"primary\" onClick={openModal}><Gift/> <br/> Donate To This Project</Button>\n              </div>\n            </div>\n          </Col> : \n          null\n        }\n      </Row>\n      <br/>\n      <h2>About {title} </h2>\n      <p className=\"mt-3\">{description}</p>\n      <DonateModal\n        onClose={closeModal}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        show={modalVisible}\n      />\n    </Container>\n  )\n}\n\nfunction DonateModal({\n  show,\n  onClose,\n  onSubmit,\n  onChange\n}) {\n  return (\n    <Modal show={show} onHide={onClose}>\n      <Modal.Header>\n        <Modal.Title>Donate</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSubmit}>\n          <Form.Group controlId=\"amount\">\n            <Form.Label>Amount (ETH)</Form.Label>\n            <Form.Control type=\"number\" name=\"amount\" onChange={onChange}/>\n          </Form.Group>\n          <Button variant=\"secondary\" onClick={onClose} className=\"me-1 mt-1\">Close</Button>\n          <Button variant=\"primary\" type=\"submit\" className=\"mt-1\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function FundRaiseWrapper() {\n  const [donateForm, setDonateForm] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [uiData, setUiData] = useState({})\n\n  const { id } = useParams()\n\n  const { dependencies } = useContext(AppContext)\n  const { fundRaise, account, web3 } = dependencies\n\n  //Define function to get fundraise data\n  let getFundRaiseData = React.useCallback(async function getFundRaiseData() {\n    return await fundRaise.methods.fundRaises(id).call()\n  },[fundRaise.methods,id]);\n\n  //Define setupDonateListener function\n  let setupDonateListener= React.useCallback(function setupDonateListener() {\n    fundRaise.events.Donated({}, (error, contractEvent) => {\n      const { amount } = contractEvent.returnValues\n      const updatedTotal = parseInt(amount) + parseInt(uiData.current) + ''\n      setUiData(previousState => ({ ...previousState, current: updatedTotal, modalVisible: false }))\n    })\n  },[uiData,fundRaise.events]);\n\n  //Define event listener for withdrawal\n  let setupWithdrawListener= React.useCallback(function setupWithdrawListener() {\n    fundRaise.events.Withdraw({}, (error, contractEvent) => {\n      setUiData(previousState => ({ ...previousState, status: false }))\n    })\n  },[fundRaise.events])\n\n  \n\n  useEffect(() => {\n    (async function() {\n      setUiData(await getFundRaiseData())\n    })()\n  }, [getFundRaiseData])\n  \n  useEffect(() => {\n    if (uiData.current) {\n      setupDonateListener()\n      setupWithdrawListener()\n      setLoading(false)\n    }\n  }, [uiData, setupDonateListener, setupWithdrawListener])\n\n  \n\n  function onChange(event) {\n    setDonateForm(event.target.value)\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault()\n    await fundRaise.methods.donate(id).send({ from: account, value: web3.utils.toWei(donateForm, 'ether') })\n  }\n\n  async function withdraw() {\n    await fundRaise.methods.withdraw(id).send({ from: account })\n  }\n\n  return (\n    !loading ?\n      <FundRaise\n        title={uiData.title}\n        id={id}\n        description={uiData.description}\n        current={web3.utils.fromWei(uiData.current, 'ether')}\n        goal={web3.utils.fromWei(uiData.goal, 'ether')}\n        closeModal={() => setUiData(previousState => ({ ...previousState, modalVisible: false }))}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        modalVisible={uiData.modalVisible}\n        openModal={() => setUiData(previousState => ({ ...previousState, modalVisible: true }))}\n        userIsFundRaiseCreator={uiData.creator === account}\n        withdraw={withdraw}\n        active={uiData.status}\n      /> :\n      <Alert key=\"info\" variant=\"info\">\n      Loading project details ...\n      </Alert>\n  )\n}","import Web3 from \"web3\";\n\n/**\n * @description Script provided by the react truffle box to get web3 object\n * @returns {Object}\n */\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        resolve(web3);\n      } catch (error) {\n        reject(error);\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      // Use Mist/MetaMask's provider.\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n      resolve(web3);\n    }\n    // Fallback to localhost; use dev console port by default...\n    else {\n      const provider = new Web3.providers.HttpProvider(\n        \"http://127.0.0.1:8545\"\n      );\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n      resolve(web3);\n    }\n  });\n\nexport default getWeb3;\n","import React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap'\nimport { GiftFill, HouseFill,PencilSquare, PersonBoundingBox } from 'react-bootstrap-icons';\nimport './css/NavBar.css'\nexport default function NavBarComponent(\n  \n){\nreturn(\n\n<Navbar collapseOnSelect  bg=\"dark\" variant=\"dark\"  expand=\"lg\">\n  <Container>\n    <Navbar.Brand href=\"/\"> <GiftFill/>{' '}Fund-Net App</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n        <Nav.Link href=\"/\"><HouseFill/> Dashboard</Nav.Link>\n        <Nav.Link href=\"/account\"><PersonBoundingBox/>  My Account</Nav.Link>\n        <Nav.Link href=\"/#ExploreCampaigns\"><PencilSquare/>  Explore Campaigns</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n\n\n  </Container>\n  \n</Navbar>\n\n);\n}\n\n","import React, { useEffect, useState } from \"react\";\n  import './css/Login.css';\n\n\nfunction isMobileDevice() {\n  return 'ontouchstart' in window || 'onmsgesturechange' in window;\n}\n\nasync function connect(onConnected) {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  onConnected(accounts[0]);\n}\n\nasync function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\",\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account);\n      return;\n    }\n\n    if (isMobileDevice()) {\n      await connect(onConnected);\n    }\n  }\n}\n\n\nexport default function MetaMaskAuth({ onAddressChanged }) {\n\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  useEffect(() => {\n    checkIfWalletIsConnected(setUserAddress);\n  }, []);\n\n  /*useEffect(() => {\n    onAddressChanged(userAddress);\n  }, [userAddress]);*/\n\n \n  return userAddress ? (\n   window.location.reload()\n  ) : (\n     <Connect setUserAddress={setUserAddress}/>\n  );\n}\n\n\nfunction Connect({ setUserAddress }) {\n  if (isMobileDevice()) {\n    const dappUrl = \"metamask-auth.ilamanov.repl.co\"; // TODO enter your dapp URL. For example: https://uniswap.exchange. (don't enter the \"https://\")\n    const metamaskAppDeepLink = \"https://metamask.app.link/dapp/127.0.0.1:3000\" + dappUrl;\n    return (\n      <a href={metamaskAppDeepLink}>\n         <button className=\"LoginBtn\">\n           Connect to MetaMask\n         </button>\n      </a>\n    );\n  }\n\n  \n  return (\n    <button className=\"LoginBtn\" onClick={() => connect(setUserAddress)}>\n      Connect to MetaMask\n    </button>\n  );\n}\n\n\n/*function Address({ userAddress }) {\n  return (\n    <span className=\"address\">{userAddress.substring(0, 5)}…{userAddress.substring(userAddress.length - 4)}</span>\n  );\n}*/\n","import React, {useEffect, useState} from 'react';\nimport {Container,Row, Col, Button, Table} from 'react-bootstrap';\nimport './css/MyAccount.css';\nimport {PersonBoundingBox,DoorOpenFill} from 'react-bootstrap-icons';\n\n\n\n\n\n\n  \n\n  \nexport default function MyAccountComponent(){\n\n    const[walletAccount, setWalletAccount ] = useState('');\n    const[isConnected, setIsConnected ]= useState(false);\n    const [ ethBalance, setEthBalance ] = useState(null);\n    const [ currentChain, setCurrentChain ] = useState('');\n    const[currentProvider, setProviderName] = useState('');\n    \n\n\n  // Initialize the application and MetaMask Event Handlers\n  useEffect(() => {\n\n    // Setup Listen Handlers on MetaMask change events\n    if(typeof window.ethereum !== 'undefined') {\n        // Add Listener when accounts switch\n        window.ethereum.on('accountsChanged', (accounts) => {\n\n          console.log('Account changed: ', accounts[0])\n          setWalletAccount(accounts[0])\n\n        })\n        \n        // Do something here when Chain changes\n        window.ethereum.on('chainChanged', (chaindId) => {\n\n          console.log('Chain ID changed: ', chaindId)\n          setCurrentChain(chaindId)\n\n        })\n\n    } else {\n\n        alert('Please install MetaMask to use this service!')\n\n    }\n  }, [])\n\n\n  // Used to see if the wallet is currently connected to the application\n  // If an account has been accessed with MetaMask, then the wallet is connected to the application.\n  useEffect(() => {\n    setIsConnected(walletAccount ? true : false)\n}, [walletAccount])\n\n// Connect the Wallet to the current selected account in MetaMask. \n// Will generate a login request for user if no account is currently connected to the application\nconst handleConnectWallet = async () => {\n        const provider = window.ethereum;\n        const accounts = await provider.request({method: 'eth_requestAccounts' })\n        const account = accounts[0];\n        setWalletAccount(account);\n    }\n\n\n//Get network provider name\nconst getProviderName = async (ProviderName) => {\n    const provider = window.ethereum;\n    if(provider === window.ethereum){\n        ProviderName = \"Metamask\"\n        setProviderName(ProviderName);\n    }else{\n        ProviderName = \"Multiple wallets detected.\"\n        setProviderName(ProviderName);\n\n    }\n}\n\n//Get current chain Id\n\nconst getCurrentChainId = async () => {\n    const chainId = await window.ethereum.request({ method: 'eth_chainId'});\n    setCurrentChain(chainId);\n}\n    \n   // Handle Disconnected. Removing the state of the account connected \n  // to your app should be enough to handle Disconnect with your application.\n  \n  // Handle Disconnected. Removing the state of the account connected \n  // to your app should be enough to handle Disconnect with your application.\n  const handleDisconnect = async () => {\n\n    console.log('Disconnecting MetaMask...')\n    setIsConnected(false)\n    setWalletAccount('')\n}\n\n    //get account balance of current user\n    const handleGetBalance = async () => {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const account = accounts[0];\n\n        const balance = await window.ethereum.request({ method: 'eth_getBalance', params: [account, 'latest']})\n\n        const wei = parseInt(balance, 16)\n        const gwei = (wei / Math.pow(10, 9)) // parse to gwei\n        const eth = (wei / Math.pow(10, 18)) // parse to Eth\n\n        setEthBalance({wei, gwei, eth})\n    }\n    \n    return(\n        \n        \n        <Container className=\"Profile-wrapper\">\n            <Row>\n                <Col><Button variant=\"outline-primary\" size=\"lg\"  onClick={() => {handleGetBalance(); handleConnectWallet();getCurrentChainId(); getProviderName();}}> <DoorOpenFill/> Show Account Details</Button></Col>\n            </Row>\n            \n            <Row>\n                <Col><h1><PersonBoundingBox/>  Account Details</h1></Col>\n            </Row>\n            <Row>\n            <Col>Account Status: <strong style={{color:'green'}}>Logged In</strong></Col>\n            \n            </Row> \n\n            <div className=\"profileDetails\">\n            <Table striped bordered hover>\n                <tbody>\n                <tr>\n                        \n                        <th>Current Network Provider</th>\n                        <td>{currentProvider}</td>\n                    \n                </tr>\n                    <tr>\n                        <th>Account Address</th>\n                        <td>{walletAccount}</td>\n                    </tr>\n                    <tr>\n                        \n                            <th>Chain ID</th>\n                            <td>{currentChain}</td>\n                        \n                    </tr>\n                    <tr>\n                        <th>Account Balance (ETH)</th>\n                        <td>{ ethBalance?.eth % 1 !== 0 ? ethBalance?.eth.toFixed(4) : ethBalance?.eth} </td>\n                    </tr>\n                </tbody>\n            </Table>\n            </div>\n        </Container>\n\n       \n            \n    )\n}\n\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './css/Footer.css';\n\nexport default function FooterComponent(){\n\n    const date = new Date();\n    const Year = date.getFullYear();\n        \n    return(\n        \n        //create footer here\n        <Container>\n            <footer className=\"Footer\">\n                <small style={{marginTop:\"1rem\"}}> © {Year} Copyright by <a href=\"https://github.com/Smuia/blockchain-developer-bootcamp-final-project.git\" >Simon Muia</a></small>\n            </footer>\n        </Container>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport {Row, Col, Container, Alert} from 'react-bootstrap';\nimport HomeWrapper from './pages/home/Home';\nimport { FundRaiseWrapper } from './pages/fund-raise/FundRaise';\nimport AppContext from './app-context'\nimport FundRaise from './contracts/FundRaise.json';\nimport getWeb3 from './getWeb3';\nimport { ethers } from 'ethers';\nimport NavBarComponent from './pages/components/NavBar';\nimport './index.css';\nimport LoginPageComponent from './pages/components/Login';\nimport MyAccountComponent from './pages/components/MyAccount';\nimport FooterComponent from './pages/components/Footer';\n\nfunction getLibrary(provider) {\n  return new ethers.providers.Web3Provider(provider);\n}\n\n\nexport default function App() {\n\n  if (window.ethereum) {\n    window.ethereum.on('networkChanged', () => window.location.reload());\n  }else if(window.ethereum){\n    window.ethereum.on('accountsChanged', (accounts) => {\n      if(!accounts.length){\n        alert(\"Account disconnected\");\n      }\n      window.location.reload()\n    });\n  }else if(!window.ethereum){\n    alert(\"You need to install Metamask to proceed\")\n  }\n\n  const [dependencies, setDependencies] = useState({ web3: null, account: null, fundRaise: null, loaded: false });\n\n  /**\n   * @description Use effect to load the dependencies needed by the routes to interact with the blockchain\n   */\n\n   useEffect((networkId, networkData, fundRaise, web3) => {\n    (async function() {\n\n      web3 = await getWeb3();\n      networkId = await web3.eth.net.getId();\n      networkData = FundRaise.networks[networkId];\n\n      if(networkData === undefined){\n\n        alert(\"Connect to Localhost or Rinkeby network only to proceed\");\n      }else{\n        fundRaise = new web3.eth.Contract(FundRaise.abi, networkData.address);\n      \n\n      const [account] = await web3.eth.getAccounts();\n\n      setDependencies(previousState => ({ ...previousState, web3, account, fundRaise, loaded: true }));\n   \n      }\n       })();\n  }, []);\n\n\n  /**\n   * @description Abstraction for connecting user to application;\n   * this is shown to the user if they are not initially connected\n   * on load\n   */\n  \n  return (\n    <Router>\n      <AppContext.Provider getLibrary={getLibrary}>\n        {\n          dependencies.loaded ?\n          (\n            dependencies.account ?\n              <Switch>\n                <Route path=\"/fund-raise/:id\">\n                  <NavBarComponent/>\n                  <FundRaiseWrapper/>\n                  <FooterComponent/>\n                </Route>\n                <Route exact path=\"/account\">\n                  <NavBarComponent/>\n                  <MyAccountComponent/>\n                  <FooterComponent/>\n                </Route>\n                <Route path=\"/\">\n                  <NavBarComponent/>\n                  <HomeWrapper/>\n                  <FooterComponent/>                \n                </Route>                \n                <Route path=\"*\">\n                  <NoMatch/>\n                </Route>\n              </Switch> :\n              <div className=\"loginPortal\">\n                <Container>\n                  <Row>\n                  <Col><h1>FUND-NET</h1></Col>\n                  </Row>\n                  <Row className=\"loginDescription\">\n                  <Col><small>Welcome to fund-net portal. Connect to Metamark via the button below to access the portal</small></Col>\n                </Row>\n                <Row>\n                  <Col><LoginPageComponent/></Col>\n                </Row>\n                \n                </Container>\n                \n              </div>\n              \n              \n          ) : \n          <Alert variant=\"warning\">Connect to Localhost or Rinkeby network only to proceed</Alert>\n        }\n      </AppContext.Provider>\n    </Router>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>Page not found (404).</div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}