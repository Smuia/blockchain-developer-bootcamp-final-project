{"version":3,"sources":["pages/utils/get-image-for-fund-raise.js","app-context.js","pages/home/Home.jsx","pages/fund-raise/FundRaise.jsx","getWeb3.js","pages/components/NavBar.js","pages/components/Login.js","pages/components/MyAccount.js","pages/components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["getImageForFundRaise","postIndex","fundRaiseImages","normalizedFundRaiseImages","React","createContext","Home","closeModal","onChange","onSubmit","modalVisible","openModal","fundRaises","onClickCard","Container","fluid","className","CreateModal","onClose","show","Row","Col","Button","onClick","variant","size","style","marginTop","id","marginBottom","map","description","key","FundRaise","fundRaiseId","title","fundRaiseImage","Card","width","Img","src","Body","Title","Modal","onHide","Header","textAlign","Form","Group","controlId","Label","Control","required","type","name","placeholder","as","HomeWrapper","useState","goal","fundRaiseForm","setFundRaiseForm","loading","setLoading","setModalVisible","setFundRaises","dependencies","useContext","AppContext","fundRaise","account","web3","history","useHistory","getFundRaises","useCallback","a","methods","getHomeData","call","navigateToFundRaise","push","setupCreatePostListener","events","EventCreated","error","contractEvent","returnValues","event","preventDefault","createEvent","utils","toWei","send","from","useEffect","target","previousState","value","current","userIsFundRaiseCreator","withdraw","active","lg","backgroundImage","DonateModal","FundRaiseWrapper","donateForm","setDonateForm","uiData","setUiData","useParams","getFundRaiseData","setupDonateListener","Donated","amount","updatedTotal","parseInt","setupWithdrawListener","Withdraw","status","donate","Alert","fromWei","creator","getWeb3","Promise","resolve","reject","window","ethereum","Web3","console","log","provider","providers","HttpProvider","NavBarComponent","Navbar","collapseOnSelect","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","isMobileDevice","connect","onConnected","alert","request","method","accounts","length","MetaMaskAuth","onAddressChanged","userAddress","setUserAddress","checkIfWalletIsConnected","location","reload","Connect","MyAccountComponent","Table","striped","bordered","hover","FooterComponent","Year","Date","getFullYear","App","on","loaded","setDependencies","networkId","networkData","eth","net","getId","networks","Contract","abi","address","getAccounts","Provider","path","exact","NoMatch","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b15381b.chunk.js","sourcesContent":["/**\n * @description Helper function to get the image for a post\n * @param {Number} postIndex\n * @returns {String}\n */\nexport default function getImageForFundRaise(postIndex) {\n  const fundRaiseImages = [\n    \"https://www.efficy.com/wp-content/uploads/2020/12/Crowdfunding.png\",\n    \"https://decentralized-mvp.s3.amazonaws.com/fundraiser/fundraise-2-min.jpg\",\n    \"https://decentralized-mvp.s3.amazonaws.com/fundraiser/fundraise-3-min.jpg\"\n  ];\n  const normalizedFundRaiseImages = postIndex + 1;\n\n  if (normalizedFundRaiseImages % 3 === 0) {\n    return fundRaiseImages[2];\n  } else if (normalizedFundRaiseImages % 2 === 0) {\n    return fundRaiseImages[1];\n  } else {\n    return fundRaiseImages[0];\n  }\n}","import React from 'react'\nexport default React.createContext()","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Container, Row, Col, Button, Modal, Form } from 'react-bootstrap';\nimport getImageForFundRaise from '../utils/get-image-for-fund-raise';\nimport AppContext from '../../app-context';\nimport { Folder2Open, PencilSquare } from 'react-bootstrap-icons';\n\nimport './Home.css';\n\nexport function Home({\n  closeModal,\n  onChange,\n  onSubmit,\n  modalVisible,\n  openModal,\n  fundRaises,\n  onClickCard\n}) {\n  return (\n    \n    <Container fluid=\"lg\" className=\"home\">      \n      <CreateModal\n        onChange={onChange}\n        onClose={closeModal}\n        onSubmit={onSubmit}\n        show={modalVisible}\n      />\n      \n      <Row>\n        <Col className=\"home-top-section\">\n          \n          <div className=\"home-top-section-overlay\"></div>\n          <div className=\"home-button-header-container\">\n            <h2>WELCOME TO FUND-NET APP</h2>\n            <p>A decentralized fund raising app running on the blockchain.</p>\n            <Button className=\"createProjectBtn\" onClick={openModal} variant=\"primary\" size=\"lg\"><PencilSquare/> Create a Campaign</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '20px' }}>\n        <Col>\n          <h2 className=\"pageTitle\">Explore Our Campaigns</h2>\n        </Col>\n      </Row>\n      <Row id=\"ExploreCampaigns\"  style= {{marginBottom:\"10px\"}}>\n        <small style= {{marginBottom:\"4rem\"}}><i>Our main mission and vision is to see\n          the world where people come together for the best of each other. <br/>See the campaigns listed below.</i></small>\n\n        {fundRaises.map((description) => (\n          <Col key={description.id} style={{ marginBottom: '10px' }}>\n            <FundRaise\n              fundRaiseId={description.id}\n              title={description.title}\n              onClickCard={onClickCard}\n            />\n          </Col>\n        ))}\n\n\n      </Row>\n    </Container>\n  )\n}\n\nfunction FundRaise({\n  fundRaiseId,\n  title,\n  onClickCard\n}) {\n  const fundRaiseImage = getImageForFundRaise(fundRaiseId)\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={fundRaiseImage}/>\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Button onClick={() => onClickCard(fundRaiseId)} variant=\"primary\"><Folder2Open/> Learn More</Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nfunction CreateModal({\n  onChange,\n  onClose,\n  onSubmit,\n  show\n}) {\n\n  return (\n    <Modal show={show} onHide={onClose} id=\"myModal\">\n      <Modal.Header>\n        <Container style={{textAlign:'center'}}>\n          <Row>\n            <Col><Modal.Title>Create Your Campaign</Modal.Title></Col>\n          </Row>\n          <Row>\n            <Col> <small>This campaign will be displayed on the our campaign list</small></Col>\n          </Row>\n        </Container>\n        \n       \n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSubmit}>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Campaign Title</Form.Label>\n            <Form.Control required type=\"text\" name=\"title\" onChange={onChange}/>\n          </Form.Group>\n          <Form.Group controlId=\"goal\">\n            <Form.Label>Goal (ETH)</Form.Label>\n            <Form.Control required type=\"number\" name=\"goal\" placeholder=\"1\" onChange={onChange}/>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Campaign Description</Form.Label>\n            <Form.Control required as=\"textarea\" name=\"description\"  onChange={onChange}/>\n          </Form.Group>\n          <Button variant=\"secondary\" onClick={onClose} className=\"me-1 mt-1\">Close</Button>\n          <Button variant=\"primary\" type=\"submit\" className=\"mt-1\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function HomeWrapper() {\n\n  const [fundRaiseForm, setFundRaiseForm] = useState({ title: '', goal: '', description: '' })\n  const [loading, setLoading] = useState(true)\n  const [modalVisible, setModalVisible] = useState(false)\n  const [fundRaises, setFundRaises] = useState([])\n\n  const { dependencies } = useContext(AppContext)\n  const { fundRaise, account, web3 } = dependencies\n\n  const history = useHistory()\n\n  /**\n   * @description Function used to get the events\n   */\n  let getFundRaises = React.useCallback(async function getFundRaises() {\n    return await fundRaise.methods.getHomeData().call()\n  },[fundRaise.methods]\n  );\n\n  let navigateToFundRaise = React.useCallback(\n    /**\n   * @description Wrapper for keeping code DRY\n   */\n  function navigateToFundRaise(id) {\n    history.push(`/fund-raise/${id}`)\n  },[history]\n\n  )\n\n\n  /**\n   * @description Setup the create event listener\n   */\n  let setupCreatePostListener = React.useCallback(function setupCreatePostListener() {\n    fundRaise.events.EventCreated({}, (error, contractEvent) => {\n      const { id } = contractEvent.returnValues\n      navigateToFundRaise(id)\n    })\n  },[navigateToFundRaise,fundRaise.events]);\n\n  \n  useEffect(() => {\n    (async function() {\n      setupCreatePostListener()\n      setFundRaises(await getFundRaises())\n      setLoading(true)\n    })()\n  }, [setupCreatePostListener,getFundRaises])\n\n  \n  \n  \n  \n  /**\n   * @description On change handler for post modal\n   * @param {Object} event\n   */\n  function onChange(event) {\n    const { target } = event\n    setFundRaiseForm(previousState => ({ ...previousState, [target.name]: target.value }))\n  }\n\n  /**\n   * @description Submit handler for new post\n   * @param {Object} event \n   */\n  async function onSubmit(event) {\n    event.preventDefault()\n    const { title, goal, description } = fundRaiseForm\n    await fundRaise.methods.createEvent(title, description, web3.utils.toWei(goal, 'ether')).send({ from: account })\n  }\n\n  \n\n  return (\n    loading ?\n    \n      <Home\n        closeModal={() => setModalVisible(false)}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        modalVisible={modalVisible}\n        openModal={() => setModalVisible(true)}\n        fundRaises={fundRaises}\n        onClickCard={id => navigateToFundRaise(id)}\n      /> :\n      <div>loading...</div>\n  )\n}","import React, { useContext, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Container, Col, Row, Button, Modal, Form, Alert } from 'react-bootstrap'\nimport getImageForFundRaise from '../utils/get-image-for-fund-raise'\nimport AppContext from '../../app-context'\nimport { CashStack, Gift } from 'react-bootstrap-icons'\n//import NavBar from '../components/NavBar';\n\nimport './FundRaise.css'\n\nexport default function FundRaise({\n  title,\n  id,\n  description,\n  current,\n  goal,\n  closeModal,\n  onChange,\n  onSubmit,\n  modalVisible,\n  openModal,\n  userIsFundRaiseCreator,\n  withdraw,\n  active\n}) {\n  return (\n    <Container fluid=\"lg\">\n      \n      <h1 className=\"mb-3\">{title}</h1>\n      {\n        userIsFundRaiseCreator && active ?\n          <Row>\n            <Col className=\"p-2\">\n              <Button variant=\"danger\" onClick={withdraw} size=\"lg\"><CashStack/>  Withdraw Cash</Button>\n            </Col>\n          </Row> :\n          null\n      }\n      <Row>\n        <Col lg={6}>\n          <div className=\"fund-raise-image\" style={{ backgroundImage: `url(\"${getImageForFundRaise(id)}\")` }}></div>\n        </Col>\n        {\n          active ?\n          <Col>\n            <div className=\"fund-raise-side-panel mt-2 mt-lg-0\">\n              <div className=\"fund-raise-goal\">{current} ETH raised of {goal} ETH</div>\n              <div><p>We are glad that you are a great giver. If you wish to walk\n                with us, click the button below and LET'S CHANGE THE WORLD!</p></div>\n              <div className=\"fund-raise-donate-button-container\">\n                <Button variant=\"primary\" onClick={openModal}><Gift/> <br/> Donate To This Project</Button>\n              </div>\n            </div>\n          </Col> : \n          null\n        }\n      </Row>\n      <br/>\n      <h2>About {title} </h2>\n      <p className=\"mt-3\">{description}</p>\n      <DonateModal\n        onClose={closeModal}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        show={modalVisible}\n      />\n    </Container>\n  )\n}\n\nfunction DonateModal({\n  show,\n  onClose,\n  onSubmit,\n  onChange\n}) {\n  return (\n    <Modal show={show} onHide={onClose}>\n      <Modal.Header>\n        <Modal.Title>Donate</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSubmit}>\n          <Form.Group controlId=\"amount\">\n            <Form.Label>Amount (ETH)</Form.Label>\n            <Form.Control type=\"number\" name=\"amount\" onChange={onChange}/>\n          </Form.Group>\n          <Button variant=\"secondary\" onClick={onClose} className=\"me-1 mt-1\">Close</Button>\n          <Button variant=\"primary\" type=\"submit\" className=\"mt-1\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function FundRaiseWrapper() {\n  const [donateForm, setDonateForm] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [uiData, setUiData] = useState({})\n\n  const { id } = useParams()\n\n  const { dependencies } = useContext(AppContext)\n  const { fundRaise, account, web3 } = dependencies\n\n  //Define function to get fundraise data\n  let getFundRaiseData = React.useCallback(async function getFundRaiseData() {\n    return await fundRaise.methods.fundRaises(id).call()\n  },[fundRaise.methods,id]);\n\n  //Define setupDonateListener function\n  let setupDonateListener= React.useCallback(function setupDonateListener() {\n    fundRaise.events.Donated({}, (error, contractEvent) => {\n      const { amount } = contractEvent.returnValues\n      const updatedTotal = parseInt(amount) + parseInt(uiData.current) + ''\n      setUiData(previousState => ({ ...previousState, current: updatedTotal, modalVisible: false }))\n    })\n  },[uiData,fundRaise.events]);\n\n  //Define event listener for withdrawal\n  let setupWithdrawListener= React.useCallback(function setupWithdrawListener() {\n    fundRaise.events.Withdraw({}, (error, contractEvent) => {\n      setUiData(previousState => ({ ...previousState, status: false }))\n    })\n  },[fundRaise.events])\n\n  \n\n  useEffect(() => {\n    (async function() {\n      setUiData(await getFundRaiseData())\n    })()\n  }, [getFundRaiseData])\n  \n  useEffect(() => {\n    if (uiData.current) {\n      setupDonateListener()\n      setupWithdrawListener()\n      setLoading(false)\n    }\n  }, [uiData, setupDonateListener, setupWithdrawListener])\n\n  \n\n  function onChange(event) {\n    setDonateForm(event.target.value)\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault()\n    await fundRaise.methods.donate(id).send({ from: account, value: web3.utils.toWei(donateForm, 'ether') })\n  }\n\n  async function withdraw() {\n    await fundRaise.methods.withdraw(id).send({ from: account })\n  }\n\n  return (\n    !loading ?\n      <FundRaise\n        title={uiData.title}\n        id={id}\n        description={uiData.description}\n        current={web3.utils.fromWei(uiData.current, 'ether')}\n        goal={web3.utils.fromWei(uiData.goal, 'ether')}\n        closeModal={() => setUiData(previousState => ({ ...previousState, modalVisible: false }))}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        modalVisible={uiData.modalVisible}\n        openModal={() => setUiData(previousState => ({ ...previousState, modalVisible: true }))}\n        userIsFundRaiseCreator={uiData.creator === account}\n        withdraw={withdraw}\n        active={uiData.status}\n      /> :\n      <Alert key=\"info\" variant=\"info\">\n      Loading project details ...\n      </Alert>\n  )\n}","import Web3 from \"web3\";\n\n/**\n * @description Script provided by the react truffle box to get web3 object\n * @returns {Object}\n */\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        resolve(web3);\n      } catch (error) {\n        reject(error);\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      // Use Mist/MetaMask's provider.\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n      resolve(web3);\n    }\n    // Fallback to localhost; use dev console port by default...\n    else {\n      const provider = new Web3.providers.HttpProvider(\n        \"http://127.0.0.1:8545\"\n      );\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n      resolve(web3);\n    }\n  });\n\nexport default getWeb3;\n","import React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap'\nimport { GiftFill, HouseFill,PencilSquare, PersonBoundingBox } from 'react-bootstrap-icons';\nimport './css/NavBar.css'\nexport default function NavBarComponent(\n  \n){\nreturn(\n\n<Navbar collapseOnSelect  bg=\"dark\" variant=\"dark\"  expand=\"lg\">\n  <Container>\n    <Navbar.Brand href=\"/\"> <GiftFill/>{' '}Fund-Net App</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n        <Nav.Link href=\"/\"><HouseFill/> Dashboard</Nav.Link>\n        <Nav.Link href=\"/account\"><PersonBoundingBox/>  My Account</Nav.Link>\n        <Nav.Link href=\"/#ExploreCampaigns\"><PencilSquare/>  Explore Campaigns</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n\n\n  </Container>\n  \n</Navbar>\n\n);\n}\n\n","import React, { useEffect, useState } from \"react\";\n  import './css/Login.css';\n\n\nfunction isMobileDevice() {\n  return 'ontouchstart' in window || 'onmsgesturechange' in window;\n}\n\nasync function connect(onConnected) {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  onConnected(accounts[0]);\n}\n\nasync function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\",\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account);\n      return;\n    }\n\n    if (isMobileDevice()) {\n      await connect(onConnected);\n    }\n  }\n}\n\n\nexport default function MetaMaskAuth({ onAddressChanged }) {\n\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  useEffect(() => {\n    checkIfWalletIsConnected(setUserAddress);\n  }, []);\n\n  /*useEffect(() => {\n    onAddressChanged(userAddress);\n  }, [userAddress]);*/\n\n \n  return userAddress ? (\n   window.location.reload()\n  ) : (\n     <Connect setUserAddress={setUserAddress}/>\n  );\n}\n\n\nfunction Connect({ setUserAddress }) {\n  if (isMobileDevice()) {\n    const dappUrl = \"metamask-auth.ilamanov.repl.co\"; // TODO enter your dapp URL. For example: https://uniswap.exchange. (don't enter the \"https://\")\n    const metamaskAppDeepLink = \"https://metamask.app.link/dapp/127.0.0.1:3000\" + dappUrl;\n    return (\n      <a href={metamaskAppDeepLink}>\n         <button className=\"LoginBtn\">\n           Connect to MetaMask\n         </button>\n      </a>\n    );\n  }\n\n  \n  return (\n    <button className=\"LoginBtn\" onClick={() => connect(setUserAddress)}>\n      Connect to MetaMask\n    </button>\n  );\n}\n\n\n/*function Address({ userAddress }) {\n  return (\n    <span className=\"address\">{userAddress.substring(0, 5)}…{userAddress.substring(userAddress.length - 4)}</span>\n  );\n}*/\n","import React from 'react';\nimport {Container,Row, Col, Button, Table} from 'react-bootstrap';\nimport './css/MyAccount.css';\nimport {PersonBoundingBox,DoorOpenFill} from 'react-bootstrap-icons';\n\n\n\n\n\nexport default  function MyAccountComponent(){\n\n  \n    return(\n        \n        <Container className=\"Profile-wrapper\">\n            <Row>\n                <Col><Button variant=\"outline-warning\"> <DoorOpenFill/> Logout</Button></Col>\n            </Row>\n            \n            <Row>\n                <Col><h1><PersonBoundingBox/>  Account Details</h1></Col>\n            </Row>\n            <Row><Col>Account Status: <strong>Logged In</strong></Col></Row>\n\n            <div className=\"profileDetails\">\n            <Table striped bordered hover>\n                <tbody>\n                    <tr>\n                        <th>Account Address</th>\n                        <td> </td>\n                    </tr>\n                    <tr>\n                        \n                            <th>Ethereum Wallet</th>\n                            <td>wallet here</td>\n                        \n                    </tr>\n                    <tr>\n                        <th>Account Balance</th>\n                        <td>balance here</td>\n                    </tr>\n                </tbody>\n            </Table>\n            </div>\n        </Container>\n\n       \n            \n    )\n}\n\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './css/Footer.css';\n\nexport default function FooterComponent(){\n\n    const date = new Date();\n    const Year = date.getFullYear();\n        \n    return(\n        \n        //create footer here\n        <Container>\n            <footer className=\"Footer\">\n                <small style={{marginTop:\"1rem\"}}> © {Year} Copyright by <a href=\"https://github.com/Smuia/blockchain-developer-bootcamp-final-project.git\" >Simon Muia</a></small>\n            </footer>\n        </Container>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport {Row, Col, Container} from 'react-bootstrap';\nimport { HomeWrapper as Home } from './pages/home/Home';\nimport { FundRaiseWrapper } from './pages/fund-raise/FundRaise';\nimport AppContext from './app-context'\nimport FundRaise from './contracts/FundRaise.json';\nimport getWeb3 from './getWeb3';\nimport NavBarComponent from './pages/components/NavBar';\nimport './index.css';\nimport LoginPageComponent from './pages/components/Login';\nimport MyAccountComponent from './pages/components/MyAccount';\nimport FooterComponent from './pages/components/Footer';\n\n\nexport default function App() {\n  if(window.ethereum) {\n    window.ethereum.on('networkChanged', () => window.location.reload());\n  }\n\n  const [dependencies, setDependencies] = useState({ web3: null, account: null, fundRaise: null, loaded: false });\n\n  /**\n   * @description Use effect to load the dependencies needed by the routes to interact with the blockchain\n   */\n   useEffect(() => {\n    (async function(networkId, networkData, fundRaise, web3) {\n      web3 = await getWeb3();\n      networkId = await web3.eth.net.getId();\n      networkData = FundRaise.networks[networkId];\n      fundRaise = new web3.eth.Contract(FundRaise.abi, networkData.address);\n\n      const [account] = await web3.eth.getAccounts();\n\n      setDependencies(previousState => ({ ...previousState, web3, account, fundRaise, loaded: true }));\n    })();\n  }, []);\n\n\n  /**\n   * @description Abstraction for connecting user to application;\n   * this is shown to the user if they are not initially connected\n   * on load\n   */\n  \n  return (\n    <Router>\n      <AppContext.Provider value={{ dependencies }}>\n        {\n          dependencies.loaded ?\n          (\n            dependencies.account ?\n              <Switch>\n                <Route path=\"/fund-raise/:id\">\n                  <NavBarComponent/>\n                  <FundRaiseWrapper/>\n                  <FooterComponent/>\n                </Route>\n                <Route exact path=\"/account\">\n                  <NavBarComponent/>\n                  <MyAccountComponent/>\n                  <FooterComponent/>\n                </Route>\n                <Route path=\"/\">\n                <NavBarComponent/>\n                  <Home/>\n                  <FooterComponent/>\n                </Route>                \n                <Route path=\"*\">\n                  <NoMatch/>\n                </Route>\n              </Switch> :\n              <div className=\"loginPortal\">\n                <Container>\n                  <Row>\n                  <Col><h1>FUND-NET</h1></Col>\n                  </Row>\n                  <Row className=\"loginDescription\">\n                  <Col><small>Welcome to fund-net portal. Connect to Metamark via the button below to access the portal</small></Col>\n                </Row>\n                <Row>\n                  <Col><LoginPageComponent/></Col>\n                </Row>\n                \n                </Container>\n                \n              </div>\n              \n              \n          ) : \n          <div>loading....</div>\n        }\n      </AppContext.Provider>\n    </Router>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>Page not found (404).</div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}